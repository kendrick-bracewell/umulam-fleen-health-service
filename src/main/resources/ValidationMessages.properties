# ********** Commons Begins **************
notNullPhrase=should be provided and cannot be empty
notBlankPhrase=should be provided and cannot be empty
# ********** Commons Ends **************

# ********** Country Begins **************
countryName=Country
country.title.notEmpty={countryName} title {notBlankPhrase}
country.title.size={countryName} title '${validatedValue}' should be greater than {min} and less than {max} in length of characters
country.code.notEmpty={countryName} code {notBlankPhrase}
country.code.size={countryName} code '${validatedValue}' should be greater than {min} and less than {max} in length of characters
country.foundingYear.notEmpty={countryName} founding year {notBlankPhrase}
country.foundingYear.size={countryName} founding year '${validatedValue}' should not be greater than {max} numbers
country.foundingYear.isNumber={countryName} founding year '${validatedValue}' is not a number
country.mapLogoUrl.isUrl={countryName} map logo link or url '${validatedValue}' is invalid
country.mapLogoUrl.size={countryName} map logo link or url '${validatedValue}' should be less than {max} in length of characters
# ********** Country Ends **************


# ********** Department Begins **************
departmentName=Department
department.title.notEmpty={departmentName} title {notBlankPhrase}
department.title.size={departmentName} title '${validatedValue}' should be greater than {min} and less than {max} in length of characters
department.code.notEmpty={departmentName} code {notBlankPhrase}
department.code.size={departmentName} code '${validatedValue}' should be greater than {min} and less than {max} in length of characters
department.faculty.notEmpty={departmentName} faculty {notBlankPhrase}
department.faculty.isNumber={departmentName} faculty '${validatedValue}' is not a number
department.faculty.exists=Faculty does not exist
# ********** Department Ends **************


# ********** Faculty Begins **************
facultyName=Faculty
faculty.title.notEmpty={facultyName} title {notBlankPhrase}
faculty.title.size={facultyName} title '${validatedValue}' should be greater than {min} and less than {max} in length of characters
faculty.code.notEmpty={facultyName} code {notBlankPhrase}
faculty.code.size={facultyName} code '${validatedValue}' should be greater than {min} and less than {max} in length of characters
# ********** Faculty Ends **************


# ********** Institution Begins **************
institutionName=Institution
institution.title.notEmpty={institutionName} title {notBlankPhrase}
institution.title.size={institutionName} title '${validatedValue}' should be greater than {min} and less than {max} in length of characters
institution.location.notEmpty={institutionName} location {notBlankPhrase}
institution.location.size={institutionName} location '${validatedValue}' should be greater than {min} and less than {max} in length of characters
institution.country.notEmpty={institutionName} country {notBlankPhrase}
institution.country.isNumber={institutionName} country '${validatedValue}' is not a number
institution.country.exists=Country does not exist
institution.state.notEmpty={institutionName} state {notBlankPhrase}
institution.state.isNumber={institutionName} state '${validatedValue}' is not a number
institution.state.exists=State does not exist
institution.foundingYear.notEmpty={institutionName} founding year {notBlankPhrase}
institution.foundingYear.size={institutionName} founding year '${validatedValue}' should not be greater than {max} numbers
institution.foundingYear.isNumber={institutionName} founding year '${validatedValue}' is not a number
# ********** Institution Ends **************


# ********** Material Award Begins **************
materialAwardName=Material Award
materialAward.title.notEmpty={materialAwardName} title {notBlankPhrase}
materialAward.title.size={materialAwardName} title '${validatedValue}' should be greater than {min} and less than {max} in length of characters
materialAward.code.notEmpty={materialAwardName} code {notBlankPhrase}
materialAward.code.size={materialAwardName} code '${validatedValue}' should be greater than {min} and less than {max} in length of characters
materialAward.awardType.notEmpty={materialAwardName} type {notBlankPhrase}
materialAward.awardType.size={materialAwardName} type '${validatedValue}' should be greater than {min} and less than {max} in length of characters
# ********** Material Award Ends **************

# ********** Publisher Begins **************
publisherName=Publisher
publisher.title.notEmpty={publisherName} title {notBlankPhrase}
publisher.title.size={publisherName} title '${validatedValue}' should be greater than {min} and less than {max} in length of characters
# ********** Publisher Ends **************


# ********** Role Begins **************
roleName=Role
role.title.notEmpty={roleName} title {notBlankPhrase}
role.title.size={roleName} title '${validatedValue}' should be greater than {min} and less than {max} in length of characters
role.description.size={roleName} description '${validatedValue}' should be less than {max} in length of characters
# ********** Role Ends **************


# ********** State Begins **************
stateName=State
state.title.notEmpty={stateName} title {notBlankPhrase}
state.title.size={stateName} title '${validatedValue}' should be greater than {min} and less than {max} in length of characters
state.capital.notEmpty={stateName} capital {notBlankPhrase}
state.capital.size={stateName} capital '${validatedValue}' should be greater than {min} and less than {max} in length of characters
state.foundingYear.notEmpty={stateName} founding year {notBlankPhrase}
state.foundingYear.size={stateName} founding year '${validatedValue}' should not be greater than {max} numbers
state.foundingYear.isNumber={stateName} founding year '${validatedValue}' is not a number
state.mapLogoUrl.isUrl={stateName} map logo link or url '${validatedValue}' is invalid
state.mapLogoUrl.size={stateName} map logo link or url '${validatedValue}' should be less than {max} in length of characters
state.country.notEmpty={stateName} country {notBlankPhrase}
state.country.isNumber={stateName} country '${validatedValue}' is not a number
state.country.exists=Country does not exist
# ********** State Ends **************


# ********** Member Status Begins **************
memberStatusName=Member Status
memberStatus.title.notEmpty={memberStatusName} title {notBlankPhrase}
memberStatus.title.size={memberStatusName} title '${validatedValue}' should be greater than {min} and less than {max} in length of characters
memberStatus.description.size={memberStatusName} description '${validatedValue}' should be less than {max} in length of characters
# ********** Member Status Ends **************


# ********** Material Begins **************
materialName=Material
material.title.notEmpty={materialName} title {notBlankPhrase}
material.title.size={materialName} title '${validatedValue}' should be greater than {min} and less than {max} in length of characters
material.materialAbstract.notEmpty={materialName} abstract {notBlankPhrase}
material.materialAbstract.size={materialName} abstract '${validatedValue}' should be greater than {min} and less than {max} in length of characters
material.materialAward.notEmpty={materialName} award {notBlankPhrase}
material.materialAward.isNumber={materialName} award '${validatedValue}' is not a number
material.materialAward.exists=Material award does not exist
material.materialType.notEmpty={materialName} title {notBlankPhrase}
material.materialType.isValid=Type of Material is not valid
material.awardYear.notEmpty={materialName} award year {notBlankPhrase}
material.awardYear.size={materialName} award year '${validatedValue}' should not be greater than {max} numbers
material.awardYear.isNumber={materialName} award year '${validatedValue}' is not a number
material.institution.notEmpty={materialName} institution {notBlankPhrase}
material.institution.isNumber={materialName} institution '${validatedValue}' is not a number
material.institution.exists=Institution does not exist
material.department.notEmpty={materialName} department {notBlankPhrase}
material.department.isNumber={materialName} department '${validatedValue}' is not a number
material.department.exists=Department does not exist
material.faculty.notEmpty={materialName} faculty {notBlankPhrase}
material.faculty.isNumber={materialName} faculty '${validatedValue}' is not a number
material.faculty.exists=Faculty does not exist
material.materialDocumentLink.notEmpty={materialName} document attachment {notBlankPhrase}
material.materialDocumentLink.isUrl={materialName} link or url '${validatedValue}' is invalid
material.materialDocumentLink.size={materialName} link or url '${validatedValue}' should be less than {max} in length of characters
# ********** Material Ends **************


# ********** Sign Up Begins **************
signUpName=Member
signUp.firstName.notEmpty={signUpName} First Name {notBlankPhrase}
signUp.firstName.size={signUpName} First Name '${validatedValue}' should be greater than {min} and less than {max} in length of characters
signUp.lastName.notEmpty={signUpName} Last Name {notBlankPhrase}
signUp.lastName.size={signUpName} Last Name '${validatedValue}' should be greater than {min} and less than {max} in length of characters
signUp.emailAddress.notEmpty={signUpName} Email Address {notBlankPhrase}
signUp.emailAddress.size={signUpName} Email Address '${validatedValue}' should be greater than {min} and less than {max} in length of characters
signUp.emailAddress.format={signUpName} Email Address is invalid. Email address should be valid e.g. mar@example.com
signUp.emailAddress.exists={signUpName} Email Address already exists. Use another email address or sign in.
signUp.password.notEmpty={signUpName} Password {notBlankPhrase}
signUp.password.size={signUpName} Password '${validatedValue}' should be greater than {min} and less than {max} in length of characters
signUp.confirmPassword.notEmpty={signUpName} Confirm Password {notBlankPhrase}
signUp.confirmPassword.size={signUpName} Confirm Password '${validatedValue}' should be greater than {min} and less than {max} in length of characters
signUp.passwordConfirmation.equal={signUpName} Password and Confirm Password should be equal
# ********** Sign Up Ends **************