# ********** Commons Begins **************
notNullPhrase=should be provided and cannot be empty
notBlankPhrase=should be provided and cannot be empty

# ********** Commons Ends **************

# ********** Country Begins **************
countryName=Country
country.title.notEmpty={countryName} title {notBlankPhrase}
country.title.size={countryName} title '${validatedValue}' should be greater than {min} and less than {max} in length of characters
country.code.notEmpty={countryName} code {notBlankPhrase}
country.code.size={countryName} code '${validatedValue}' should be greater than {min} and less than {max} in length of characters
country.code.exists={countryName} code '${validatedValue}' already exists. Use another code
# ********** Country Ends **************


# ********** Role Begins **************
roleName=Role
role.title.notEmpty={roleName} title {notBlankPhrase}
role.title.size={roleName} title '${validatedValue}' should be greater than {min} and less than {max} in length of characters
role.description.size={roleName} description '${validatedValue}' should be less than {max} in length of characters
# ********** Role Ends **************

# ********** Profile Begins **************
verificationTemplateName=Verification Template
profile.verificationStatus=Invalid Verification Status type
profile.verification.comment=Comment '${validatedValue}' should be greater than {min} and less than {max} in length of characters
profile.verificationTemplate.notEmpty={verificationTemplateName} {notBlankPhrase}
profile.verificationTemplate.isNumber={verificationTemplateName} '${validatedValue}' is not a number
profile.verificationTemplate.exists={verificationTemplateName} does not exist
# ********** Profile Ends **************


# ********** Member Status Begins **************
memberStatusName=Member Status
memberStatus.title.notEmpty={memberStatusName} title {notBlankPhrase}
memberStatus.title.size={memberStatusName} title '${validatedValue}' should be greater than {min} and less than {max} in length of characters
memberStatus.description.size={memberStatusName} description '${validatedValue}' should be less than {max} in length of characters
memberStatus.code.notEmpty={memberStatusName} code {notBlankPhrase}
memberStatus.code.size={memberStatusName} code '${validatedValue}' should be greater than {min} and less than {max} in length of characters
memberStatus.code.exists={memberStatusName} code '${validatedValue}' already exists. Use another code
# ********** Member Status Ends **************

# ********** Sign Up Begins **************
signUpName=Member
signUp.firstName.notEmpty={signUpName} First Name {notBlankPhrase}
signUp.firstName.size={signUpName} First Name '${validatedValue}' should be greater than {min} and less than {max} in length of characters
signUp.lastName.notEmpty={signUpName} Last Name {notBlankPhrase}
signUp.lastName.size={signUpName} Last Name '${validatedValue}' should be greater than {min} and less than {max} in length of characters
signUp.emailAddress.notEmpty={signUpName} Email Address {notBlankPhrase}
signUp.emailAddress.size={signUpName} Email Address '${validatedValue}' should be greater than {min} and less than {max} in length of characters
signUp.emailAddress.format={signUpName} Email Address is invalid. Email address should be valid e.g. mar@example.com
signUp.emailAddress.exists={signUpName} Email Address already exists. Use another email address.
signUp.phoneNumber.notEmpty={signUpName} Phone Number {notBlankPhrase}
signUp.phoneNumber.size={signUpName} Phone Number '${validatedValue}' should be greater than {min} and less than {max} in length of characters
signUp.phoneNumber.format={signUpName} Phone Number is invalid. Phone number should be valid e.g. +2347012345678
signUp.phoneNumber.exists={signUpName} Phone Number already exists. Use another phone number.
signUp.password.notEmpty={signUpName} Password {notBlankPhrase}
signUp.password.size={signUpName} Password '${validatedValue}' should be greater than {min} and less than {max} in length of characters
signUp.confirmPassword.notEmpty={signUpName} Confirm Password {notBlankPhrase}
signUp.confirmPassword.size={signUpName} Confirm Password '${validatedValue}' should be greater than {min} and less than {max} in length of characters
signUp.passwordConfirmation.equal={signUpName} Password and Confirm Password should be equal
password.constraint={signUpName} Password or Confirm Password should contain at least one uppercase, lowercase, number and special character
signup.gender=Invalid Gender type
signup.dateOfBirth.notEmpty={signUpName} Date of Birth {notBlankPhrase}
signup.dateOfBirth.invalid={signUpName} Date of Birth is invalid
# ********** Sign Up Ends **************


# ********** Sign Up Begins **************
signInName=Member
signIn.emailAddress.notEmpty={signUpName} Email Address {notBlankPhrase}
signIn.emailAddress.size={signUpName} Email Address '${validatedValue}' should be greater than {min} and less than {max} in length of characters
signIn.emailAddress.format={signUpName} Email Address is invalid. Email address should be valid e.g. mar@example.com
signIn.password.notEmpty={signUpName} Password {notBlankPhrase}
signIn.password.size={signUpName} Password '${validatedValue}' should be greater than {min} and less than {max} in length of characters
# ********** Sign Up Ends **************


# ********** Verification Begins **************
verificationCodeName=Verification code
verification.type=Invalid verification type
verification.code.notEmpty={verificationCodeName} {notBlankPhrase}
verification.code.size={verificationCodeName} '${validatedValue}' should be greater than {min} and less than {max} in length of characters
mfa.type.notEmpty=MFA type {notBlankPhrase}
mfa.type.type=Invalid MFA type
platform.entity.type.type=Invalid User Type
verification.document.isUrl=Document link or url '${validatedValue}' is invalid
verification.document.size=Document link or url '${validatedValue}' should be less than {max} in length of characters
# ********** Verification Ends **************


# ********** Business Begins **************
businessName=Business
business.name.notEmpty={businessName} name {notBlankPhrase}
business.name.size={businessName} name '${validatedValue}' should be greater than {min} and less than {max} in length of characters
business.description.size={businessName} description '${validatedValue}' should be greater than {min} and less than {max} in length of characters
business.contactAddress.notEmpty={businessName} contact address {notBlankPhrase}
business.contactAddress.size={businessName} contact address '${validatedValue}' should be greater than {min} and less than {max} in length of characters
business.city.notEmpty={businessName} city {notBlankPhrase}
business.city.size={businessName} city '${validatedValue}' should be greater than {min} and less than {max} in length of characters
business.registrationNumberOrId.notEmpty={businessName} registration number or ID {notBlankPhrase}
business.registrationNumberOrId.size={businessName} registration number or ID '${validatedValue}' should be greater than {min} and less than {max} in length of characters
business.websiteLink.size={businessName} website link '${validatedValue}' should be greater than {min} and less than {max} in length of characters
business.country.notEmpty={businessName} country {notBlankPhrase}
business.country.isNumber={businessName} country '${validatedValue}' is not a number
business.country.exists=Country does not exist
# ********** Business Ends **************

# ********** Professional Begins **************
professionalName=Professional
professional.title.notEmpty={professionalName} title {notBlankPhrase}
professional.title.size={professionalName} title '${validatedValue}' should be greater than {min} and less than {max} in length of characters
professional.yearsOfExperience.notNull={professionalName} years of experience {notBlankPhrase}
professional.yearsOfExperience.size={professionalName} years of experience '${validatedValue}' should not be greater than {max} numbers
professional.yearsOfExperience.isNumber={professionalName} years of experience '${validatedValue}' is not a number
professional.areaOfExpertise.notEmpty={professionalName} area of expertise {notBlankPhrase}
professional.areaOfExpertise.size={professionalName} areas of expertise or specialization '${validatedValue}' should be greater than {min} and less than {max} in length of characters
professional.country.notEmpty={professionalName} country {notBlankPhrase}
professional.country.isNumber={professionalName} country '${validatedValue}' is not a number
professional.country.exists=Country does not exist
professional.languagesSpoken.notEmpty={professionalName} languages spoken {notBlankPhrase}
professional.languagesSpoken.size={professionalName} languages spoken '${validatedValue}' should be greater than {min} and less than {max} in length of characters
professional.type=Invalid Professional type
professional.qualificationType=Invalid Qualification type
professional.availabilityStatus=Invalid Availability status
verificationStatus=Invalid Verification Status type
# ********** Professional Ends **************


# ********** Member Begins **************
memberName=Member
member.firstName.notEmpty={memberName} first name {notBlankPhrase}
member.firstName.size={memberName} first name '${validatedValue}' should be greater than {min} and less than {max} in length of characters
member.lastName.notEmpty={memberName} last name {notBlankPhrase}
member.lastName.size={memberName} last name '${validatedValue}' should be greater than {min} and less than {max} in length of characters
member.gender=Invalid Gender type
member.dateOfBirth.notEmpty={signUpName} Date of Birth {notBlankPhrase}
member.dateOfBirth.invalid={signUpName} Date of Birth is invalid
member.profilePhoto.isUrl=Profile photo link or url '${validatedValue}' is invalid
member.profilePhoto.size=Profile photo link or url '${validatedValue}' should be less than {max} in length of characters
# ********** Member Ends **************